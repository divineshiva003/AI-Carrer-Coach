const questions = [
   
        { id:1,question: "When we mention the prototype of a function?", 
            options: ["(a) Defining",  "(b) Declaring",  "(c)	Prototyping",  "(d)	Calling"], correct: 0},
        {id:2,question: "Point out the error in the following program (if it is compiled with Turbo C compiler). img src", 
            options: ["(a)	No error",  "(b) display() doesn't get invoked",  "(c) display() is called before it is defined",  "(d)	None of these"], correct: 2},
        {id:3,question: "Point out the error in the following program.", 
            options: ["(a) Error: Declaration syntax error 'v' (or) Size of v is unknown or zero.",  "(b) Program terminates abnormally.",  "(c)	No error.",  "(d) None of these."], correct: 0},
        {id:4,question: "A long double can be used if range of a double is not enough to accommodate a real number.", 
            options: [ "(a) True",  "(b)	False"], correct: 0},
        {id:5,question: "A float is 4 bytes wide, whereas a double is 8 bytes wide.", 
            options: [ "(a) True", "(b)	False"], correct: 0},
        {id:6,question: "Size of short integer and long integer can be verified using the sizeof() operator.", 
            options: [ "(a)	True",  "(b) False"], correct: 0},
        {id:7,question: "Which of the following is the correct order of evaluation for the below expression? z = x + y * z / 4 % 2-1", 
            options: [ "(a)	* / % +=",  "(b) = * / % + -",  "(c) / * %+ =",  "(d) * % /+ ="], correct: 0},
        {id:8,question: "Which of the following are unary operators in C ? 1. !   2.	sizeof  3.	~   4.	&&", 
            options: [ "(a) 1, 2",  "(b)	1, 3",  "(c) 2, 4",  "(d) 1, 2, 3"], correct: 3},
        {id:9,question: "In which order do the following gets evaluated 1. Relational  2. Arithmetic  3.	Logical 4. Assignment", 
            options: [ "(a) 2134",  "(b) 1234",  "(c) 4321",  "(d) 3214"], correct: 0},
        {id:10,question: "Operators: What is the output of the following code snippet? int x = 5; printf('%d\n', x++); ", 
            options: [ "(a) 4 ",  "(b) 5 ",  "(c)	Compilation Error ",  "(d) Unexpected Behavior "], correct: 1},
        {id:11,question: "Pointers: What does the following code do? int *ptr; ptr = &x; *ptr = 10; ", 
            options: [ "(a) Assigns 10 to x ",  "(b)	Creates an array ",  "(c) Assigns the address of x to ptr ",  "(d) None of the above "], correct: 2},
        {id:12,question: "Arrays: How can you access the third element of an array named data with 10 elements? ", 
            options: [ "(a) data[2] ",  "(b)	data(3) ",  "(c) data.3",  "(d)	None of the above "], correct: 0},
        {id:13,question: "Loops: What is an infinite loop in C? ",
            options: [  "(a) for (int i = 0; i < 10; i++) { } ",  "(b) while (true) { } ",  "(c) do { } while (false); ",  "(d) for (int i = 10; i > 0; i--) { } "], correct: 1},
        {id:14,question: "Functions: What is the purpose of a function prototype? ", 
            options: [ "(a) To declare a variable ",  "(b)	To define a function body ",  "(c) To declare a function's signature ",  "(d) To call a function "], correct: 2},
        {id:15,question: "String Manipulation: What function is used to print a string to the console? ", 
            options: [  "(a) getline() ",  "(b) scanf() ",  "(c) printf() ",  "(d)	strlen() "], correct: 2},
        {id:16,question: "Preprocessor Directives: What does #include <stdio.h> do in C code? ", 
            options: [ "(a) Defines a macro ",  "(b) Includes the standard input/output library ",  "(c) Declares a variable ",  "(d) Starts a comment block "], correct: 1},
        {id:17,question: "Memory Management: How can you allocate memory dynamically in C? ", 
            options: [ "(a) Using arrays ",  "(b)	Using malloc() ",  "(c)	Using variables ",  "(d) Using free()"], correct: 1},
        {id:18,question: "Output: Which code snippet will print 'Hello, World!'? ", 
            options: [ "(a) printf('Hello, World!'); ",  "(b) cout << 'Hello, World!'; ",  "(c) int main() { ... } ",  "(d) #include <stdio.h>"], correct: 0},
        {id:19,question: "Data Types: What is the size of an int variable in C on a 32-bit system? ", 
            options: [ "(a) 1 byte ",  "(b) 2 bytes ",  "(c) 4 bytes ",  "(d) 8 bytes"], correct: 1},
        {id:20,question: "Arrays: How do you access the third element of an array named numbers with 10 elements? ", 
            options: [ "(a) numbers[2] ",  "(b) numbers(3) ", "(c) 3[numbers] ",  "(d) getnumbers(2);"], correct: 0},
        {id:21,question: "Pointers: What does the following code print: int x = 5; int *ptr = &x; printf('%d', *ptr); ", 
            options: [ "(a) Memory address of x",  "(b) Compilation error",  "(c) Garbage value",  "(d) 5"], correct: 3},
        {id:22,question: "Functions: What is the purpose of the return statement in a function? ", 
            options: [ "(a) To declare variables ",  "(b) To define a function ",  "(c) To control program flow and optionally return a value ",  "(d) To access global variables"], correct: 2},
        {id:23,question: "Loops: What will the following code print: for (int i = 0; i < 5; i++) { printf('%d', i); } ", 
            options: [ "(a) 0 1 2 3 4 ",  "(b) 1 2 3 4 5 ",  "(c) 5 4 3 2 1 ",  "(d) Infinite loop"], correct: 0},
        {id:24,question: "Strings: How do you declare a character array to store the string 'Hello'? ", 
            options: [ "(a) char message = 'Hello'; ",  "(b) char message[] = 'Hello'; ",  "(c) string message = 'Hello'; ",  "(d) int message[5] = {'H', 'e', 'l', 'l', 'o'};"], correct: 1},
        {id:25,question: "Input/Output: How do you read an integer from the user in C? ", 
            options: [  "(a) int num = scanf('%d'); ",  "(b) int num = getchar(); ",  "(c) cin >> num; ", "(d) int num = input('%d'); "], correct: 3},
        {id:26,question: "Operators: What is the output of 5 % 2? ", 
            options: [ "(a) 0 ",  "(b) 2 ",  "(c) 3 ",  "(d) Compile Error"], correct: 0},
        {id:27,question: "Conditional Statements: What does the if statement check for? ", 
            options: [  "(a) Loop condition ",  "(b) Function call ",  "(c) Conditional execution based on a boolean expression ",  "(d) Variable declaration"], correct: 2},
        {id:28,question: "Bitwise Operators: What is the result of 10 & 7 (bitwise AND)? ",
            options: [  "(a) 3 ",  "(b) 10 ",  "(c) 7 ",  "(d) 17"], correct: 0},
        {id:29,question: "Structures: What is the purpose of structures in C? ", 
            options: [ "(a) To define arrays ",  "(b) To group related variables under a single name ",  "(c) To define functions ",  "(d) To perform memory allocation"], correct: 1},
        {id:30,question: "Recursion: What is recursion? ", 
            options: [ "(a) A function calling itself ",  "(b) A loop that iterates a fixed number of times ",  "(c) A way to define constants ",  "(d) A method for memory management"], correct: 0},
        {id:31,question: "Preprocessor Directives: What does #include <stdio.h> do? ", 
            options: [ "(a) Declares user-defined functions ",  "(b) Includes standard input/output library ",  "(c) Defines a macro ",  "(d) Starts the main function"], correct:1},
        {id:32,question: "Memory Management: How do you allocate memory dynamically in C? ", 
            options: [ "(a) Using new keyword",  "(b) By declaring a variable",  "(c) Using malloc function ",  "(d) Through inheritance"], correct: 2},
        {id:33,question: "What is the output of the following code snippet? image", 
            options: [  "(a) x is 10  ",  "(b) x is not 10  ",  "(c) Compiler Error  ",  "(d) Runtime Error  "], correct: 0},
        {id:34,question: "What is the result of sizeof(char) in C?", 
            options: [  "(a) 1 ",  "(b) 2 ",  "(c) 4 ",  "(d) Depends on the compiler "], correct: 0},
       
    ]
    export default questions;
    